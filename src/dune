(env
 (dev
  (flags
   (:standard -warn-error -9-27-32-33-34))))

(library
 (name lib)
 (modules CT_of_json JGS JGS2)
 (wrapped false)
 (libraries yojson GT OCanren noCanren.Option noCanren.List)
 (flags
  (:standard -rectypes))
 (preprocess
  (pps
   OCanren-ppx.ppx_repr
   OCanren-ppx.ppx_fresh
   OCanren-ppx.ppx_distrib
   -new-typenames
   ppx_yojson_conv
   ppx_expect
   GT.ppx_all))
 (inline_tests))

(executable
 (name JGS_run)
 (modules JGS_run)
 (libraries lib)
 (flags
  (:standard -rectypes))
 (preprocess
  (pps
   OCanren-ppx.ppx_repr
   OCanren-ppx.ppx_fresh
   OCanren-ppx.ppx_distrib
   -new-typenames
   GT.ppx_all)))

(rule
 (targets JGS.ml)
 (deps
  (:input JGS.noc.ml)
  (package noCanren))
 (action
  (run
   sh
   -c
   "noCanren -w -8 %{input} -I `ocamlfind -query OCanren` -rectypes -o %{targets} | ocamlformat --enable-outside-detected-project --impl -")))

(cram
 (deps ./JGS_run.exe))
